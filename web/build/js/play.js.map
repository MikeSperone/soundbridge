{"version":3,"sources":["../../src/js/play.js"],"names":[],"mappings":";;;;;;AAAA;;;;IAIM,I;AACF,kBAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA;;AAExB,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,OAAL,GAAe,OAAf;;AAEA,aAAK,MAAL,GAAc,IAAd;AACA,aAAK,SAAL,GAAiB,CAAjB;AACA,aAAK,OAAL,GAAe,CAAf;;AAGA,YAAI,OAAO,IAAX;AACA,YAAI,MAAM,IAAI,cAAJ,EAAV;;AAEA,YAAI,IAAJ,CAAS,KAAT,EAAgB,KAAhB;AACA,YAAI,YAAJ,GAAmB,aAAnB;;AAEA,YAAI,MAAJ,GAAa,YAAW;AACpB,gBAAI,YAAY,IAAI,QAApB;;AAEA,iBAAK,OAAL,CAAa,eAAb,CAA6B,SAA7B,EAAwC,UAAS,MAAT,EAAiB;AACjD,qBAAK,MAAL,GAAc,MAAd;AACA,qBAAK,WAAL;AACA,qBAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB,GAAyB,CAAzB;AACH,aAJL,EAKI,UAAS,CAAT,EAAW;AAAC,wBAAQ,GAAR,CAAY,mCAAmC,EAAE,GAAjD;AAAuD,aALvE;AAMH,SATD;;AAWA,YAAI,IAAJ;AACH;;;;sCAEa;AACV,iBAAK,GAAL,GAAW,KAAK,OAAL,CAAa,kBAAb,EAAX;AACA,iBAAK,GAAL,CAAS,MAAT,GAAkB,KAAK,MAAvB;;AAEA,iBAAK,GAAL,CAAS,IAAT,GAAgB,IAAhB;AACA,iBAAK,GAAL,CAAS,SAAT,GAAqB,KAAK,SAA1B;AACA,iBAAK,GAAL,CAAS,OAAT,GAAmB,KAAK,OAAxB;;AAEA,iBAAK,MAAL,GAAc,KAAK,OAAL,CAAa,UAAb,EAAd;AACA,iBAAK,GAAL,CAAS,OAAT,CAAiB,KAAK,MAAtB;AACA,iBAAK,MAAL,CAAY,OAAZ,CAAoB,KAAK,OAAL,CAAa,WAAjC;AACA;AACA,iBAAK,GAAL,CAAS,KAAT;AACH;;;+BAMM;AACH,gBAAI,KAAK,GAAT,EAAc;AACV,qBAAK,GAAL,CAAS,KAAT;AACH;AACJ;;;+BACM;AACH,iBAAK,GAAL,CAAS,IAAT,CAAc,CAAd;AACH;;;mCAgBU;AACP,mBAAO,CAAC,EAAC,SAAS,KAAK,KAAf,EAAD,EAAwB,EAAC,WAAW,KAAK,OAAjB,EAAxB,CAAP;AACH;;;4BA7Bc;AACX,mBAAO,KAAK,GAAL,CAAS,MAAT,CAAgB,QAAvB;AACH;;;0BAWY,C,EAAG;AACZ,iBAAK,SAAL,GAAiB,CAAjB;AACA,oBAAQ,GAAR,CAAY,iBAAe,KAAK,SAAhC;AACH,S;4BACc;AACX,mBAAO,KAAK,SAAZ;AACH;;;0BACU,C,EAAG;AACV,iBAAK,OAAL,GAAe,KAAK,GAAL,CAAU,KAAK,QAAL,GAAgB,CAA1B,EAA8B,KAAK,QAAnC,CAAf;AACA,oBAAQ,GAAR,CAAY,eAAa,KAAK,OAA9B;AACH,S;4BACY;AACT,mBAAO,KAAK,GAAL,CAAS,OAAT,GAAmB,KAAK,GAAL,CAAS,SAAnC;AACH;;;0BAKO,C,EAAG;AACP,iBAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB,GAAyB,CAAzB;AACH","file":"play.js","sourcesContent":["/**\n * Created by Mike on 8/30/16.\n */\n\nclass Play {\n    constructor(audio, context) {\n\n        this.audio = audio;\n        this.context = context;\n\n        this.buffer = null;\n        this.loopStart = 0;\n        this.loopEnd = 0;\n\n\n        let that = this;\n        let req = new XMLHttpRequest();\n\n        req.open('GET', audio);\n        req.responseType = 'arraybuffer';\n\n        req.onload = function() {\n            let audioData = req.response;\n\n            that.context.decodeAudioData(audioData, function(buffer) {\n                    that.buffer = buffer;\n                    that.startSample();\n                    that.volume.gain.value = 0;\n                },\n                function(e){console.log(\"Error with decoding audio data\" + e.err);});\n        };\n\n        req.send();\n    }\n\n    startSample() {\n        this.src = this.context.createBufferSource();\n        this.src.buffer = this.buffer;\n\n        this.src.loop = true;\n        this.src.loopStart = this.loopStart;\n        this.src.loopEnd = this.loopEnd;\n\n        this.volume = this.context.createGain();\n        this.src.connect(this.volume);\n        this.volume.connect(this.context.destination);\n        //this.volume.gain.value = 0;\n        this.src.start();\n    }\n\n    get duration() {\n        return this.src.buffer.duration;\n    }\n\n    play() {\n        if (this.src) {\n            this.src.start();\n        }\n    }\n    stop() {\n        this.src.stop(0);\n    }\n\n    set position(x) {\n        this.loopStart = x;\n        console.log(\"loop start: \"+this.loopStart);\n    }\n    get position() {\n        return this.loopStart;\n    }\n    set length(x) {\n        this.loopEnd = Math.min((this.position + x), this.duration);\n        console.log(\"loop end: \"+this.loopEnd);\n    }\n    get length() {\n        return this.src.loopEnd - this.src.loopStart;\n    }\n    toString() {\n        return [{\"audio\": this.audio}, {\"context\": this.context}];\n    }\n\n    set vol(v) {\n        this.volume.gain.value = v;\n    }\n\n}"]}