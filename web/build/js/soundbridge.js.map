{"version":3,"sources":["../../src/js/soundbridge.js"],"names":[],"mappings":"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","file":"soundbridge.js","sourcesContent":["\"use strict\";\n//Global test variable\nlet test;\n$.getJSON(\"js/settings.json\",\n    function(json){\n        console.log(\"settings loaded\");\n        run(json);\n    });\n\nfunction run(settings) {\n\n    /*\n    * Audio setup\n    */\n\n    // Sensors\n    let sensor = $('.sensor');\n    let rate = 1;\n    let zeroOut, oneOut, twoOut, threeOut;\n\n    // load settings\n    let i = Math.floor(Math.random() * 29);\n    let samples = settings.samples[i];\n    let grainSettings = settings.grain[i];\n    let delaySettings = settings.delay[i];\n\n    console.log(\"setting number: \" + i);\n\n    // set samples\n    let audioZero = 'audio/' + samples[0] + '.m4a';\n    let audioOne = 'audio/' + samples[1] + '.m4a';\n    let audioTwo = 'audio/' + samples[2] + '.m4a';\n    let audioThree = 'audio/' + samples[3] + '.m4a';\n\n    let delayOn = true;\n    let context = new AudioContext();\n\n    if (samples.a !== \"\") {\n        let audioAmb = 'audio/' + samples.a + '.m4a';\n        let ambient = new Play(audioAmb, context);\n        ambient.play();\n    }\n\n    let zero = new Playgroove(audioZero, context);\n    zero.delaySwitch(delaySettings[0]);\n\n    let one = new Playgroove(audioOne, context);\n    one.delaySwitch(delaySettings[1]);\n\n    let two = new Playgrain(audioTwo, context);\n    two.scatter = grainSettings[0];\n    two.fade = grainSettings[1];\n    two.spread = grainSettings[2];\n    two.feedback = grainSettings[3];\n\n    let three = new Trigroove(audioThree, context);\n    //three.delay(delaySettings[4]);\n\n    let ws = new WebSocket('ws://mikesperone.com:31296');\n\n    let over = function(id){\n\n        switch (id) {\n            case 'zero':\n                clearTimeout(zeroOut);\n                zero.volume.gain.value = 1;\n                break;\n            case 'one':\n                clearTimeout(oneOut);\n                one.volume.gain.value = 0.7;\n                break;\n            case 'two':\n                clearTimeout(twoOut);\n                two.vol = 1;\n                break;\n            case 'three':\n                clearTimeout(threeOut);\n                three.vol = 1;\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    function out(id){\n\n        switch (id) {\n            case 'zero':\n                zeroOut = setTimeout(function(){ zero.vol(0); }, 5000);\n                break;\n            case 'one':\n                oneOut = setTimeout(function(){ one.vol(0); }, 5000);\n                break;\n            case 'two':\n                twoOut = setTimeout(function(){ two.vol = 0; }, 5000);\n                break;\n            case 'three':\n                threeOut = setTimeout(function(){ three.vol = 0; }, 5000);\n                break;\n            default:\n                break;\n        }\n\n    }\n\n    ws.onopen = function(){\n        ws.onmessage = function(e){\n\n            let data = JSON.parse(e.data);\n            //console.log(data);\n            if (data.out) {\n                out(data.out);\n            } else if (data.over) {\n                over(data.over);\n            } else if (data.data) {\n                //id: e.data[0]\n                //value: e.data[1]\n                moveHand(data.data[1], data.data[0], 'remote');\n\n            }\n\n        };\n    };\n\n    sensor.on(\"mouseover\", function() {\n        over(this.id);\n        ws.send('{\"over\": \"'+this.id+'\"}');\n    });\n    sensor.on(\"mouseout\", function() {\n        out(this.id);\n        ws.send('{\"out\": \"'+this.id+'\"}');\n\n    });\n\n    sensor.on(\"mousemove\", function(event) {\n        //event.pageX range: 60 - 400\n\n        moveHand(event, this.id, 'local');\n        ws.send('{\\\"data\\\": [\"'+this.id+'\", '+event.pageX+']}');\n\n    });\n\n    function moveHand(event, id, src) {\n        event = (src === 'local') ? event.pageX : event;\n        rate = (event/270);                   // range of .225 - 1.48\n        $('#'+id).children('.value').text(rate.toFixed(2))\n        ;\n\n        switch (id) {\n            case 'zero':\n                zero.pbRate(rate);\n                if (delayOn) {\n                    zero.delTime(event/485);      // range of .125 - .825(s)\n                    zero.delFeedback(event/808);  // range of.075 - .495\n                }\n                break;\n            case 'one':\n                one.pbRate(rate);\n                if (delayOn) {\n                    one.delTime(event/485);\n                    one.delFeedback(event/808);\n                }\n                break;\n            case 'two':\n                two.read = rate;\n                break;\n            case 'three':\n                three.sensor(event/11);\n                break;\n            default:\n                break;\n        }\n    }\n}\n\n"]}