#!/usr/bin/env node

var app    = require("../app");
var server = require('http').Server(app);
var io	   = require('socket.io')(server);

const PORT = '9001';
const DEBUG = process.env.NODE_ENV === "development";

var connectedUsers = 0;
var availableSlots = 4;

/**
*  Setting Numbers
*/
const newSetting = function() {
    const i = Math.floor(Math.random() * 29);
    console.info("Setting changed to " + i);
    return i;
};

var currentSetting = newSetting();

io.on('connection', function(socket){

    console.log('user connected');

    function newUser(userType, name) {
        socket.emit('join', { userType, currentSetting });
        socket.broadcast.emit('newUser', {userType, name});
    }

    var userType = 'audience;'
    if (availableSlots === 0) {
        newUser(userType, 'anonymous');
        return;
    }
    userType = 'performer';
    availableSlots -= 1;
    //TODO: add disconnection thing, and increment available slots

    newUser(userType, 'anonymous');

    function emit(name, data) {
        DEBUG && console.info(name + ": ", data);
        socket.emit(name, data);
    }

    //TODO: I guess eventually, this should go outside of this function.
    // BUT, also it should go per "room", not overall - right?
    setInterval(function(){
        currentSetting = newSetting();
        // this socket is the part I'll need to consider.  It doesn't exist
        // above, so :/
        socket.emit('setting', { currentSetting });
    }, 60 * 1000 * 30);

    socket.on('data', function(d) {
        socket.broadcast.emit('data', d);
    });
    socket.on('enter', function(d) {
        socket.broadcast.emit('enter', d);
    });
    socket.on('exit', function(d) {
        socket.broadcast.emit('exit', d);
    });
    socket.on('login', function(d) {
        console.log('login', d);
        socket.broadcast.emit('user.joined', d);
    });
    socket.on('logout', function(d) {
        console.log('logout', d);
        socket.broadcast.emit('user.left', d);
    });

});

console.log('connecting...');
server.listen(Number(PORT), function() {
    console.log('connected to port ' + PORT);
});

